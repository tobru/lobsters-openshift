apiVersion: v1
kind: Template
metadata:
  name: lobsters
  annotations:
    description: "Lobsters"
parameters:
- name: SECRET_KEY_BASE
  displayName: Secret key base
  from: '[a-z0-9]{128}'
  generate: expression
- name: DOMAIN
  displayName: Domain under which Lobsters is reachable
  value: localhost
- name: APP_TITLE
  displayName: Title of the Lobsters instance
  value: Lobsters on OpenShift
- name: IMAGE
  displayName: Docker image to deploy
  value: docker.io/tobru/lobsters:latest
labels:
  redis: master
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: lobsters
    name: lobsters
  spec:
    replicas: 1
    selector:
      app: lobsters
      deploymentconfig: lobsters
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: lobsters
          deploymentconfig: lobsters
      spec:
        containers:
        - env:
          - name: SECRET_KEY_BASE
            value: ${SECRET_KEY_BASE}
          - name: DOMAIN
            value: ${DOMAIN}
          - name: APP_TITLE
            value: ${APP_TITLE}
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: mariadb
          - name: MYSQL_DATABASE
            valueFrom:
              secretKeyRef:
                key: database-name
                name: mariadb
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: mariadb
          image: ${IMAGE}
          imagePullPolicy: Always
          name: lobsters
          ports:
          - containerPort: 3000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    triggers:
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: lobsters
    name: lobsters
  spec:
    ports:
    - name: 3000-tcp
      port: 3000
      protocol: TCP
      targetPort: 3000
    selector:
      deploymentconfig: lobsters
    sessionAffinity: None
    type: ClusterIP
